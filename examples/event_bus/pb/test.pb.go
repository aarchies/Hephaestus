// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: test.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Weblog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp       int64   `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	UserId          string  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	HostId          string  `protobuf:"bytes,3,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	NodeId          string  `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ReqId           string  `protobuf:"bytes,5,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	RemoteAddr      string  `protobuf:"bytes,6,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	Protocol        string  `protobuf:"bytes,7,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Method          string  `protobuf:"bytes,8,opt,name=method,proto3" json:"method,omitempty"`
	Host            string  `protobuf:"bytes,9,opt,name=host,proto3" json:"host,omitempty"`
	Uri             string  `protobuf:"bytes,10,opt,name=uri,proto3" json:"uri,omitempty"`
	Referer         string  `protobuf:"bytes,11,opt,name=referer,proto3" json:"referer,omitempty"`
	UserAgent       string  `protobuf:"bytes,12,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	ClientOs        string  `protobuf:"bytes,13,opt,name=client_os,json=clientOs,proto3" json:"client_os,omitempty"`
	ClientFamily    string  `protobuf:"bytes,14,opt,name=client_family,json=clientFamily,proto3" json:"client_family,omitempty"`
	Crawler         string  `protobuf:"bytes,15,opt,name=crawler,proto3" json:"crawler,omitempty"`
	RequestSize     int64   `protobuf:"varint,16,opt,name=request_size,json=requestSize,proto3" json:"request_size,omitempty"`
	CrwalerVerified bool    `protobuf:"varint,17,opt,name=crwaler_verified,json=crwalerVerified,proto3" json:"crwaler_verified,omitempty"`
	ResponseSize    int64   `protobuf:"varint,18,opt,name=response_size,json=responseSize,proto3" json:"response_size,omitempty"`
	ResponseTime    int64   `protobuf:"varint,19,opt,name=response_time,json=responseTime,proto3" json:"response_time,omitempty"`
	ResponseCode    int64   `protobuf:"varint,20,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"`
	ResponseStatus  string  `protobuf:"bytes,21,opt,name=response_status,json=responseStatus,proto3" json:"response_status,omitempty"`
	UpstreamCode    string  `protobuf:"bytes,22,opt,name=upstream_code,json=upstreamCode,proto3" json:"upstream_code,omitempty"`
	ContentType     string  `protobuf:"bytes,23,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	GeoContinent    string  `protobuf:"bytes,24,opt,name=geo_continent,json=geoContinent,proto3" json:"geo_continent,omitempty"`
	GeoCountry      string  `protobuf:"bytes,25,opt,name=geo_country,json=geoCountry,proto3" json:"geo_country,omitempty"`
	GeoRegion       string  `protobuf:"bytes,26,opt,name=geo_region,json=geoRegion,proto3" json:"geo_region,omitempty"`
	GeoCity         string  `protobuf:"bytes,27,opt,name=geo_city,json=geoCity,proto3" json:"geo_city,omitempty"`
	GeoIsp          string  `protobuf:"bytes,28,opt,name=geo_isp,json=geoIsp,proto3" json:"geo_isp,omitempty"`
	GeoLat          float32 `protobuf:"fixed32,29,opt,name=geo_lat,json=geoLat,proto3" json:"geo_lat,omitempty"`
	GeoLon          float32 `protobuf:"fixed32,30,opt,name=geo_lon,json=geoLon,proto3" json:"geo_lon,omitempty"`
}

func (x *Weblog) Reset() {
	*x = Weblog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Weblog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Weblog) ProtoMessage() {}

func (x *Weblog) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Weblog.ProtoReflect.Descriptor instead.
func (*Weblog) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{0}
}

func (x *Weblog) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Weblog) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Weblog) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *Weblog) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Weblog) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

func (x *Weblog) GetRemoteAddr() string {
	if x != nil {
		return x.RemoteAddr
	}
	return ""
}

func (x *Weblog) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *Weblog) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Weblog) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Weblog) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Weblog) GetReferer() string {
	if x != nil {
		return x.Referer
	}
	return ""
}

func (x *Weblog) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *Weblog) GetClientOs() string {
	if x != nil {
		return x.ClientOs
	}
	return ""
}

func (x *Weblog) GetClientFamily() string {
	if x != nil {
		return x.ClientFamily
	}
	return ""
}

func (x *Weblog) GetCrawler() string {
	if x != nil {
		return x.Crawler
	}
	return ""
}

func (x *Weblog) GetRequestSize() int64 {
	if x != nil {
		return x.RequestSize
	}
	return 0
}

func (x *Weblog) GetCrwalerVerified() bool {
	if x != nil {
		return x.CrwalerVerified
	}
	return false
}

func (x *Weblog) GetResponseSize() int64 {
	if x != nil {
		return x.ResponseSize
	}
	return 0
}

func (x *Weblog) GetResponseTime() int64 {
	if x != nil {
		return x.ResponseTime
	}
	return 0
}

func (x *Weblog) GetResponseCode() int64 {
	if x != nil {
		return x.ResponseCode
	}
	return 0
}

func (x *Weblog) GetResponseStatus() string {
	if x != nil {
		return x.ResponseStatus
	}
	return ""
}

func (x *Weblog) GetUpstreamCode() string {
	if x != nil {
		return x.UpstreamCode
	}
	return ""
}

func (x *Weblog) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *Weblog) GetGeoContinent() string {
	if x != nil {
		return x.GeoContinent
	}
	return ""
}

func (x *Weblog) GetGeoCountry() string {
	if x != nil {
		return x.GeoCountry
	}
	return ""
}

func (x *Weblog) GetGeoRegion() string {
	if x != nil {
		return x.GeoRegion
	}
	return ""
}

func (x *Weblog) GetGeoCity() string {
	if x != nil {
		return x.GeoCity
	}
	return ""
}

func (x *Weblog) GetGeoIsp() string {
	if x != nil {
		return x.GeoIsp
	}
	return ""
}

func (x *Weblog) GetGeoLat() float32 {
	if x != nil {
		return x.GeoLat
	}
	return 0
}

func (x *Weblog) GetGeoLon() float32 {
	if x != nil {
		return x.GeoLon
	}
	return 0
}

var File_test_proto protoreflect.FileDescriptor

var file_test_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x74, 0x65,
	0x73, 0x74, 0x22, 0x91, 0x07, 0x0a, 0x06, 0x57, 0x65, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x77, 0x61, 0x6c, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x72, 0x77, 0x61,
	0x6c, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x67,
	0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x67, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x65, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x65, 0x6f, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x65, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x65, 0x6f, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x65, 0x6f, 0x43, 0x69, 0x74, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x67,
	0x65, 0x6f, 0x5f, 0x69, 0x73, 0x70, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65,
	0x6f, 0x49, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x65, 0x6f, 0x5f, 0x6c, 0x61, 0x74, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x67, 0x65, 0x6f, 0x4c, 0x61, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x67, 0x65, 0x6f, 0x5f, 0x6c, 0x6f, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x67, 0x65, 0x6f, 0x4c, 0x6f, 0x6e, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_test_proto_rawDescOnce sync.Once
	file_test_proto_rawDescData = file_test_proto_rawDesc
)

func file_test_proto_rawDescGZIP() []byte {
	file_test_proto_rawDescOnce.Do(func() {
		file_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_test_proto_rawDescData)
	})
	return file_test_proto_rawDescData
}

var file_test_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_test_proto_goTypes = []interface{}{
	(*Weblog)(nil), // 0: test.Weblog
}
var file_test_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_test_proto_init() }
func file_test_proto_init() {
	if File_test_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_test_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Weblog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_test_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_proto_goTypes,
		DependencyIndexes: file_test_proto_depIdxs,
		MessageInfos:      file_test_proto_msgTypes,
	}.Build()
	File_test_proto = out.File
	file_test_proto_rawDesc = nil
	file_test_proto_goTypes = nil
	file_test_proto_depIdxs = nil
}
